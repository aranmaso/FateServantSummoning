<Defs>

	<ServantSummon.FateServantRecipeDef>
		<defName>FS_PerformRandomSummon</defName>
		<label>summon servant(random)</label>
		<description>summon servant at random</description>
		<jobString>Summon servant.</jobString>
		<effectWorking>ToxGasReleasing</effectWorking>
		<soundWorking>Recipe_Cremate</soundWorking>
		<workAmount>2000</workAmount>
		<workerClass>ServantSummon.RecipeWorker_Summoning</workerClass>
		<!-- <workSpeedStat>GeneralLaborSpeed</workSpeedStat> -->
		<recipeUsers>
			<li>FSS_ChalkSummoningCircle</li>
			<!-- <li>FSS_BloodSummoningCircle</li> -->
		</recipeUsers>
		<ingredients>
			<li>
				<filter>
					<categories>
						<li>Medicine</li>
						<li>ResourcesRaw</li>
					</categories>
				</filter>
				<count>15</count>
			</li>
		</ingredients>
		<fixedIngredientFilter>
			<categories>
				<li>Medicine</li>
				<li>ResourcesRaw</li>
			</categories>		
		</fixedIngredientFilter>
	
		<modExtensions>
			<li Class="ServantSummon.RecipeExtension_SummoningPreset">
				<successfulSummoningText>Summon Success!</successfulSummoningText>
				<alreadyMaster>pawn already a master for another servant</alreadyMaster>
				<alreadySummoned>the servant with this catalyst has already been summoned</alreadySummoned>
				<effecterOnFinish>FS_SummonFinish</effecterOnFinish>
				<pawnCatalystInfos />
			</li>
		</modExtensions>
	</ServantSummon.FateServantRecipeDef>

	<ServantSummon.FateServantRecipeDef>
		<defName>FS_PerformRandomSummon_Blood</defName>
		<label>summon servant with blood(random)</label>
		<description>summon servant at random using caster blood</description>
		<jobString>Summon servant.</jobString>
		<effectWorking>ToxGasReleasing</effectWorking>
		<soundWorking>Recipe_Cremate</soundWorking>
		<workAmount>2000</workAmount>
		<workerClass>ServantSummon.RecipeWorker_BloodSummoning</workerClass>
		<!-- <workSpeedStat>GeneralLaborSpeed</workSpeedStat> -->
		<recipeUsers>
			<!-- <li>FSS_ChalkSummoningCircle</li> -->
			<li>FSS_BloodSummoningCircle</li>
		</recipeUsers>
		<ingredients>
			<!-- <li> -->
				<!-- <filter> -->
					<!-- <thingDefs> -->
						<!-- <li>WoodLog</li> -->
					<!-- </thingDefs> -->
				<!-- </filter> -->
				<!-- <count>70</count> -->
			<!-- </li> -->
		</ingredients>
		<fixedIngredientFilter>
			<!-- <thingDefs> -->
				<!-- <li>WoodLog</li> -->
			<!-- </thingDefs> -->
		</fixedIngredientFilter>
	
		<modExtensions>
			<li Class="ServantSummon.RecipeExtension_SummoningPreset">
				<successfulSummoningText>Summon Success!</successfulSummoningText>
				<alreadyMaster>pawn already a master for another servant</alreadyMaster>
				<alreadySummoned>the servant with this catalyst has already been summoned</alreadySummoned>
				<effecterOnFinish>FS_SummonFinish</effecterOnFinish>
				<pawnCatalystInfos />
			</li>
		</modExtensions>
	</ServantSummon.FateServantRecipeDef>
  
	<EffecterDef>
		<defName>FS_SummonFinish</defName>
		<children>
			<li>
				<subEffecterClass>SubEffecter_SprayerTriggered</subEffecterClass>
				<moteDef>Mote_PsychicEmanatorEffect</moteDef>
				<scale>1~1</scale>
			</li>
			<li>
				<subEffecterClass>SubEffecter_SprayerTriggered</subEffecterClass>
				<burstCount>1</burstCount>
				<positionOffset>(0, 0, 0)</positionOffset>
				<fleckDef>FS_BigWaveFleck</fleckDef>
				<positionRadius>0</positionRadius>
				<positionRadiusMin>0</positionRadiusMin>
				<scale>1</scale>
				<speed>0~0</speed>
				<rotation>0</rotation>
				<rotationRate>0</rotationRate>
				<angle>0~0</angle>
				<spawnLocType>OnSource</spawnLocType>
			</li>
		</children>
	</EffecterDef>
  
	<FleckDef ParentName="FleckBase">
		<defName>FS_BigWaveFleck</defName>
		<altitudeLayer>MoteOverhead</altitudeLayer>
		<fadeInTime>0.04</fadeInTime>
		<solidTime>4</solidTime>
		<fadeOutTime>2.5</fadeOutTime>
		<growthRate>4.0</growthRate>
		<graphicData>
			<graphicClass>Graphic_FleckPulse</graphicClass>
			<texPath>Things/Mote/Black</texPath>
			<shaderType>MoteLargeDistortionWave</shaderType>
			<shaderParameters>
				<_DistortionTex>/Things/Mote/PsychicDistortionCurrents</_DistortionTex>
				<_NoiseTex>/Things/Mote/PsycastNoise</_NoiseTex>
				<_distortionIntensity>0.12</_distortionIntensity>
				<_brightnessMultiplier>1.15</_brightnessMultiplier>
				<_noiseIntensity>10</_noiseIntensity>
				<_ageToNoiseRatio>0</_ageToNoiseRatio>
			</shaderParameters>
			<drawSize>3.0</drawSize>
		</graphicData>
	</FleckDef>

</Defs>